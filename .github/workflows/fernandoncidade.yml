name: Update Code Statistics (Multilingual)

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          path: main-repo

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc

      - name: Clone and analyze repositories
        run: |
          mkdir -p repos

          repositories=(
            "Agenda_Avaliacoes_Academicas"
            "Manager_Compression_PySide6_v.0.0.1"
            "Manager_Compression_PyQt6_v.0.0.1"
            "eisenhower_organizing"
            "Programa_Urna_Eletronica"
            "Dashboard_Streamlit-Plotly-Pandas_Management"
            "Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"
            "Dashboard_TkInter_Pareto-Diagram_ABC-Curve"
            "sloth-highlander-theme-1"
            "fernandoncidade"
            "Dashboard_Taipy"
            "File_Manager"
            "Programa_Matriz_NM"
            "Programa_Todos_Tipos_Matrizes"
            "Programa_Quociente_Resto"
            "Programa_Multiplo"
            "Programa_Media_Aritmetica"
            "Programa_Determinar_Maior_Inteiro"
          )

          total_lines=0
          total_commits=0
          total_hours=0

          echo "| Repository | Language | Estimated Hours | Lines | Commits | Productivity |" > stats.md
          echo "|------------|---------|-----------------|-------|---------|--------------|" >> stats.md

          for repo in "${repositories[@]}"; do
            echo "Processing repository: $repo"
            git clone https://github.com/fernandoncidade/$repo repos/$repo || continue
            cd repos/$repo

            cloc_output=$(cloc --exclude-dir=node_modules,.git --quiet --csv .)
            lines=$(echo "$cloc_output" | awk -F',' 'NR>1 {sum += $5} END {print sum+0}')
            lines=${lines:-0}
            language=$(echo "$cloc_output" | awk -F',' 'NR>1 && $5>0 {if ($5>max) {max=$5; lang=$2}} END {print lang}')
            language=${language:-"N/A"}
            commits=$(git rev-list --count HEAD)
            commits=${commits:-0}

            case "$language" in
              "Python") base_rate=15 ;;
              "JavaScript") base_rate=20 ;;
              "C++") base_rate=10 ;;
              "HTML") base_rate=30 ;;
              "CSS") base_rate=25 ;;
              "Java") base_rate=12 ;;
              "Markdown") base_rate=35 ;;
              *) base_rate=18 ;;
            esac

            case "$repo" in
              *"Monitor"*) complexity=1.2 ;;
              *"Dashboard"*) complexity=0.9 ;;
              *"Compression"*) complexity=1.3 ;;
              "fernandoncidade") complexity=0.8 ;;
              *) complexity=1.0 ;;
            esac

            if [ $lines -gt 5000 ]; then
              size_adjust=1.2
            elif [ $lines -gt 2000 ]; then
              size_adjust=1.1
            else
              size_adjust=1.0
            fi

            effective_rate=$(awk "BEGIN {print $base_rate / ($complexity * $size_adjust)}")
            hours=$(awk "BEGIN {h = $lines / $effective_rate; print (h > 10) ? h : 10}")
            hours=$(printf "%.1f" $hours)
            productivity=$(awk "BEGIN {printf \"%.2f\", $lines / $hours}")

            echo "| $repo | $language | ${hours}h | $lines | $commits | $productivity l/h |" >> ../stats.md

            repo_env=$(echo "$repo" | sed -e 's/-/_/g' -e 's/\./_/g' | tr '[:lower:]' '[:upper:]')
            echo "${repo_env}_LINES=$lines" >> $GITHUB_ENV
            echo "${repo_env}_COMMITS=$commits" >> $GITHUB_ENV
            echo "${repo_env}_HOURS=$hours" >> $GITHUB_ENV
            echo "${repo_env}_PROD=$productivity" >> $GITHUB_ENV

            total_lines=$((total_lines + lines))
            total_commits=$((total_commits + commits))
            total_hours=$(awk "BEGIN {printf \"%.1f\", $total_hours + $hours}")

            cd ../..
            echo "Repository $repo processed: $lines lines, $commits commits, $hours estimated hours"
          done

          echo "TOTAL_LINES=$total_lines" >> $GITHUB_ENV
          echo "TOTAL_COMMITS=$total_commits" >> $GITHUB_ENV
          echo "TOTAL_HOURS=$total_hours" >> $GITHUB_ENV

          echo "| **TOTAL** | - | ${total_hours}h | $total_lines | $total_commits | - |" >> stats.md
          mv stats.md main-repo/stats.md

      - name: Update README (All Languages)
        run: |
          cd main-repo
          # Português
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} linhas/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} horas/g" README.md

          # English
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} lines/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} hours/g" README.md

          # Español
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} líneas/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} horas/g" README.md

          # Français
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} lignes/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} heures/g" README.md

          # Italiano
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} righe/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commit/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} ore/g" README.md

          # Deutsch
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} Zeilen/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} Commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} Stunden/g" README.md

          # (Repita o bloco de substituição acima para cada variável específica dos repositórios, conforme seu README multilíngue.)
          # Exemplo para 'Agenda_Avaliacoes_Academicas':
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} linhas/g" README.md
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} lines/g" README.md
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} líneas/g" README.md
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} lignes/g" README.md
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} righe/g" README.md
          sed -i "s/<!-- AGENDA_LINES -->/${{ env.AGENDA_AVALIACOES_ACADEMICAS_LINES }} Zeilen/g" README.md

          # Repita para todos os outros placeholders/editáveis, incluindo commits, horas, produtividade, etc.

      - name: Commit and push changes
        run: |
          cd main-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md stats.md
          git commit -m "Update code statistics (multilingual) [skip ci]" || echo "No changes to commit"
          git push
