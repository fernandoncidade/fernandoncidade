name: Atualizar Estatísticas Multilíngue do README

on:
  schedule:
    - cron: '0 0 * * 0' # Executa todo domingo à meia-noite
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          path: main-repo

      - name: Configurar ambiente
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc

      - name: Clonar e analisar repositórios
        run: |
          mkdir -p repos

          repositories=(
            "Agenda_Avaliacoes_Academicas"
            "Manager_Compression_PySide6_v.0.0.1"
            "Manager_Compression_PyQt6_v.0.0.1"
            "eisenhower_organizing"
            "Programa_Urna_Eletronica"
            "Dashboard_Streamlit-Plotly-Pandas_Management"
            "Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"
            "Dashboard_TkInter_Pareto-Diagram_ABC-Curve"
            "sloth-highlander-theme-1"
            "fernandoncidade"
            "Dashboard_Taipy"
            "File_Manager"
            "Programa_Matriz_NM"
            "Programa_Todos_Tipos_Matrizes"
            "Programa_Quociente_Resto"
            "Programa_Multiplo"
            "Programa_Media_Aritmetica"
            "Programa_Determinar_Maior_Inteiro"
          )

          total_lines=0
          total_commits=0
          total_horas=0

          declare -A table_headers_pt=(
            [main]="| Repositório | Linguagem | Horas | Linhas | Commits | Produtividade |"
            [sep]="|-------------|-----------|-------|--------|---------|---------------|"
            [total]="| **TOTAL** | - | %s | %s | %s | - |"
          )
          declare -A table_headers_en=(
            [main]="| Repository | Language | Hours | Lines | Commits | Productivity |"
            [sep]="|------------|----------|-------|-------|---------|--------------|"
            [total]="| **TOTAL** | - | %s | %s | %s | - |"
          )
          declare -A table_headers_es=(
            [main]="| Repositorio | Lenguaje | Horas | Líneas | Commits | Productividad |"
            [sep]="|-------------|----------|-------|--------|---------|---------------|"
            [total]="| **TOTAL** | - | %s | %s | %s | - |"
          )
          declare -A table_headers_fr=(
            [main]="| Répertoire | Langage | Heures | Lignes | Commits | Productivité |"
            [sep]="|------------|---------|--------|--------|---------|--------------|"
            [total]="| **TOTAL** | - | %s | %s | %s | - |"
          )
          declare -A table_headers_it=(
            [main]="| Repository | Linguaggio | Ore | Righe | Commit | Produttività |"
            [sep]="|------------|------------|-----|-------|--------|--------------|"
            [total]="| **TOTALE** | - | %s | %s | %s | - |"
          )
          declare -A table_headers_de=(
            [main]="| Repository | Sprache | Stunden | Zeilen | Commits | Produktivität |"
            [sep]="|------------|--------|---------|-------|---------|---------------|"
            [total]="| **GESAMT** | - | %s | %s | %s | - |"
          )

          # Inicializa cada stats file
          echo "${table_headers_pt[main]}" > stats_pt.md
          echo "${table_headers_pt[sep]}" >> stats_pt.md
          echo "${table_headers_en[main]}" > stats_en.md
          echo "${table_headers_en[sep]}" >> stats_en.md
          echo "${table_headers_es[main]}" > stats_es.md
          echo "${table_headers_es[sep]}" >> stats_es.md
          echo "${table_headers_fr[main]}" > stats_fr.md
          echo "${table_headers_fr[sep]}" >> stats_fr.md
          echo "${table_headers_it[main]}" > stats_it.md
          echo "${table_headers_it[sep]}" >> stats_it.md
          echo "${table_headers_de[main]}" > stats_de.md
          echo "${table_headers_de[sep]}" >> stats_de.md

          for repo in "${repositories[@]}"; do
            echo "Processando repositório: $repo"
            git clone https://github.com/fernandoncidade/$repo repos/$repo || continue
            cd repos/$repo

            cloc_output=$(cloc --exclude-dir=node_modules,.git --quiet --csv .)
            lines=$(echo "$cloc_output" | awk -F',' 'NR>1 {sum += $5} END {print sum+0}')
            lines=${lines:-0}
            linguagem=$(echo "$cloc_output" | awk -F',' 'NR>1 && $5>0 {if ($5>max) {max=$5; lang=$2}} END {print lang}')
            linguagem=${linguagem:-"N/A"}
            commits=$(git rev-list --count HEAD)
            commits=${commits:-0}

            case "$linguagem" in
              "Python") taxa_base=15 ;;
              "JavaScript") taxa_base=20 ;;
              "C++") taxa_base=10 ;;
              "HTML") taxa_base=30 ;;
              "CSS") taxa_base=25 ;;
              "Java") taxa_base=12 ;;
              "Markdown") taxa_base=35 ;;
              *) taxa_base=18 ;;
            esac
            case "$repo" in
              *"Monitor"*) complexidade=1.2 ;;
              *"Dashboard"*) complexidade=0.9 ;;
              *"Compression"*) complexidade=1.3 ;;
              "fernandoncidade") complexidade=0.8 ;;
              *) complexidade=1.0 ;;
            esac
            if [ $lines -gt 5000 ]; then
              tamanho_ajuste=1.2
            elif [ $lines -gt 2000 ]; then
              tamanho_ajuste=1.1
            else
              tamanho_ajuste=1.0
            fi

            taxa_efetiva=$(awk "BEGIN {print $taxa_base / ($complexidade * $tamanho_ajuste)}")
            horas=$(awk "BEGIN {h = $lines / $taxa_efetiva; print (h > 10) ? h : 10}")
            horas=$(printf "%.1f" $horas)
            produtividade=$(awk "BEGIN {printf \"%.2f\", $lines / $horas}")

            # Traduções dos nomes dos repositórios (deixe como no original)
            declare -A repo_names_pt=( ...)
            declare -A repo_names_en=( ...)
            declare -A repo_names_es=( ...)
            declare -A repo_names_fr=( ...)
            declare -A repo_names_it=( ...)
            declare -A repo_names_de=( ... )

            echo "| ${repo_names_pt[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_pt.md
            echo "| ${repo_names_en[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_en.md
            echo "| ${repo_names_es[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_es.md
            echo "| ${repo_names_fr[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_fr.md
            echo "| ${repo_names_it[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_it.md
            echo "| ${repo_names_de[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_de.md

            repo_env=$(echo "$repo" | sed -e 's/-/_/g' -e 's/\./_/g' | tr '[:lower:]' '[:upper:]')
            echo "${repo_env}_LINES=$lines" >> $GITHUB_ENV
            echo "${repo_env}_COMMITS=$commits" >> $GITHUB_ENV
            echo "${repo_env}_HOURS=$horas" >> $GITHUB_ENV
            echo "${repo_env}_PROD=$produtividade" >> $GITHUB_ENV

            total_lines=$((total_lines + lines))
            total_commits=$((total_commits + commits))
            total_horas=$(awk "BEGIN {printf \"%.1f\", $total_horas + $horas}")

            cd ../..
            echo "Repositório $repo processado: $lines linhas, $commits commits, $horas horas estimadas"
          done

          echo "TOTAL_LINES=$total_lines" >> $GITHUB_ENV
          echo "TOTAL_COMMITS=$total_commits" >> $GITHUB_ENV
          echo "TOTAL_HOURS=$total_horas" >> $GITHUB_ENV

          printf "${table_headers_pt[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_pt.md
          printf "${table_headers_en[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_en.md
          printf "${table_headers_es[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_es.md
          printf "${table_headers_fr[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_fr.md
          printf "${table_headers_it[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_it.md
          printf "${table_headers_de[total]}\n" "$total_horas" "$total_lines" "$total_commits" >> stats_de.md

          mv stats_pt.md main-repo/stats_pt.md
          mv stats_en.md main-repo/stats_en.md
          mv stats_es.md main-repo/stats_es.md
          mv stats_fr.md main-repo/stats_fr.md
          mv stats_it.md main-repo/stats_it.md
          mv stats_de.md main-repo/stats_de.md

      - name: Atualizar README Multilíngue
        run: |
          cd main-repo

          update_table() {
            lang=$1
            stats_file="stats_${lang}.md"
            table_content=$(cat ${stats_file} | tr -d '\r')
            # Use delimitador '/' no sed, mas escape corretamente as barras e caracteres especiais
            sed -i "/<!--TABLE_STATS_${lang^^}_START-->/, /<!--TABLE_STATS_${lang^^}_END-->/c\\<!--TABLE_STATS_${lang^^}_START-->\n${table_content}\n<!--TABLE_STATS_${lang^^}_END-->" README.md
          }

          update_table pt
          update_table en
          update_table es
          update_table fr
          update_table it
          update_table de

          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} linhas/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} horas/g" README.md

      - name: Commit e push das alterações
        run: |
          cd main-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md stats_pt.md stats_en.md stats_es.md stats_fr.md stats_it.md stats_de.md
          git commit -m "Atualiza estatísticas multilíngue do README [skip ci]" || echo "No changes to commit"
          git push
