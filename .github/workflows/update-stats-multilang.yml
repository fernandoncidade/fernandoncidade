name: Atualizar Estatísticas de Código Multilíngue

on:
  schedule:
    - cron: '0 0 * * 0'  # Executa todo domingo à meia-noite
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          path: main-repo

      - name: Configurar ambiente
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc

      - name: Clonar e analisar repositórios
        run: |
          mkdir -p repos

          repositories=(
            "Agenda_Avaliacoes_Academicas"
            "Manager_Compression_PySide6_v.0.0.1"
            "Manager_Compression_PyQt6_v.0.0.1"
            "eisenhower_organizing"
            "Programa_Urna_Eletronica"
            "Dashboard_Streamlit-Plotly-Pandas_Management"
            "Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"
            "Dashboard_TkInter_Pareto-Diagram_ABC-Curve"
            "sloth-highlander-theme-1"
            "fernandoncidade"
            "Dashboard_Taipy"
            "File_Manager"
            "Programa_Matriz_NM"
            "Programa_Todos_Tipos_Matrizes"
            "Programa_Quociente_Resto"
            "Programa_Multiplo"
            "Programa_Media_Aritmetica"
            "Programa_Determinar_Maior_Inteiro"
          )

          total_lines=0
          total_commits=0
          total_horas=0

          # Tabelas multilíngues (legendas)
          declare -A table_header_pt=(
            [main]="| Repositório | Linguagem | Horas Estimadas | Linhas | Commits | Produtividade |"
            [separator]="|-------------|-----------|-----------------|--------|---------|---------------|"
          )
          declare -A table_header_en=(
            [main]="| Repository | Language | Estimated Hours | Lines | Commits | Productivity |"
            [separator]="|------------|----------|-----------------|-------|---------|--------------|"
          )
          declare -A table_header_es=(
            [main]="| Repositorio | Lenguaje | Horas Estimadas | Líneas | Commits | Productividad |"
            [separator]="|-------------|----------|-----------------|--------|---------|---------------|"
          )
          declare -A table_header_fr=(
            [main]="| Répertoire | Langage | Heures Estimées | Lignes | Commits | Productivité |"
            [separator]="|------------|---------|-----------------|-------|---------|--------------|"
          )
          declare -A table_header_it=(
            [main]="| Repository | Linguaggio | Ore Stimate | Righe | Commit | Produttività |"
            [separator]="|------------|------------|-------------|-------|--------|--------------|"
          )
          declare -A table_header_de=(
            [main]="| Repository | Sprache | Geschätzte Stunden | Zeilen | Commits | Produktivität |"
            [separator]="|------------|--------|-------------------|-------|---------|---------------|"
          )

          # Tabelas multilíngues (total legendas)
          declare -A table_total_pt=([main]="| **TOTAL** | - | ${total_horas}h | $total_lines | $total_commits | - |")
          declare -A table_total_en=([main]="| **TOTAL** | - | ${total_horas}h | $total_lines | $total_commits | - |")
          declare -A table_total_es=([main]="| **TOTAL** | - | ${total_horas}h | $total_lines | $total_commits | - |")
          declare -A table_total_fr=([main]="| **TOTAL** | - | ${total_horas}h | $total_lines | $total_commits | - |")
          declare -A table_total_it=([main]="| **TOTALE** | - | ${total_horas}h | $total_lines | $total_commits | - |")
          declare -A table_total_de=([main]="| **GESAMT** | - | ${total_horas}h | $total_lines | $total_commits | - |")

          # Arquivos multilíngues temporários para atualização do README
          stats_files=("stats_pt.md" "stats_en.md" "stats_es.md" "stats_fr.md" "stats_it.md" "stats_de.md")
          # Criação dos headers das tabelas em cada idioma
          echo "${table_header_pt[main]}" > stats_pt.md
          echo "${table_header_pt[separator]}" >> stats_pt.md
          echo "${table_header_en[main]}" > stats_en.md
          echo "${table_header_en[separator]}" >> stats_en.md
          echo "${table_header_es[main]}" > stats_es.md
          echo "${table_header_es[separator]}" >> stats_es.md
          echo "${table_header_fr[main]}" > stats_fr.md
          echo "${table_header_fr[separator]}" >> stats_fr.md
          echo "${table_header_it[main]}" > stats_it.md
          echo "${table_header_it[separator]}" >> stats_it.md
          echo "${table_header_de[main]}" > stats_de.md
          echo "${table_header_de[separator]}" >> stats_de.md

          for repo in "${repositories[@]}"; do
            echo "Processando repositório: $repo"
            git clone https://github.com/fernandoncidade/$repo repos/$repo || continue
            cd repos/$repo

            cloc_output=$(cloc --exclude-dir=node_modules,.git --quiet --csv .)
            lines=$(echo "$cloc_output" | awk -F',' 'NR>1 {sum += $5} END {print sum+0}')
            lines=${lines:-0}
            linguagem=$(echo "$cloc_output" | awk -F',' 'NR>1 && $5>0 {if ($5>max) {max=$5; lang=$2}} END {print lang}')
            linguagem=${linguagem:-"N/A"}
            commits=$(git rev-list --count HEAD)
            commits=${commits:-0}

            case "$linguagem" in
              "Python") taxa_base=15 ;;
              "JavaScript") taxa_base=20 ;;
              "C++") taxa_base=10 ;;
              "HTML") taxa_base=30 ;;
              "CSS") taxa_base=25 ;;
              "Java") taxa_base=12 ;;
              "Markdown") taxa_base=35 ;;
              *) taxa_base=18 ;;
            esac

            case "$repo" in
              *"Monitor"*) complexidade=1.2 ;;
              *"Dashboard"*) complexidade=0.9 ;;
              *"Compression"*) complexidade=1.3 ;;
              "fernandoncidade") complexidade=0.8 ;;
              *) complexidade=1.0 ;;
            esac

            if [ $lines -gt 5000 ]; then
              tamanho_ajuste=1.2
            elif [ $lines -gt 2000 ]; then
              tamanho_ajuste=1.1
            else
              tamanho_ajuste=1.0
            fi

            taxa_efetiva=$(awk "BEGIN {print $taxa_base / ($complexidade * $tamanho_ajuste)}")
            horas=$(awk "BEGIN {h = $lines / $taxa_efetiva; print (h > 10) ? h : 10}")
            horas=$(printf "%.1f" $horas)
            produtividade=$(awk "BEGIN {printf \"%.2f\", $lines / $horas}")

            # Traduções multilíngues
            declare -A repo_names_pt=(
              ["Agenda_Avaliacoes_Academicas"]="Agenda Avaliações Acadêmicas"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Programa Urna Eletrônica"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Dashboard Pareto/ABC Streamlit"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="Dashboard TkInter Pareto/ABC"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="README do Perfil"
              ["Dashboard_Taipy"]="Dashboard Taipy"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Programa Matriz NM"
              ["Programa_Todos_Tipos_Matrizes"]="Programa Todos Tipos Matrizes"
              ["Programa_Quociente_Resto"]="Programa Quociente Resto"
              ["Programa_Multiplo"]="Programa Múltiplo"
              ["Programa_Media_Aritmetica"]="Programa Média Aritmética"
              ["Programa_Determinar_Maior_Inteiro"]="Programa Determinar Maior Inteiro"
            )
            declare -A repo_names_en=(
              ["Agenda_Avaliacoes_Academicas"]="Academic Evaluations Scheduler"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Electronic Ballot Program"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Pareto/ABC Streamlit Dashboard"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="TkInter Pareto/ABC Dashboard"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="Profile README"
              ["Dashboard_Taipy"]="Taipy Dashboard"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Matrix NM Program"
              ["Programa_Todos_Tipos_Matrizes"]="All Types of Matrices Program"
              ["Programa_Quociente_Resto"]="Quotient and Remainder Program"
              ["Programa_Multiplo"]="Multiple Program"
              ["Programa_Media_Aritmetica"]="Arithmetic Mean Program"
              ["Programa_Determinar_Maior_Inteiro"]="Find Largest Integer Program"
            )
            declare -A repo_names_es=(
              ["Agenda_Avaliacoes_Academicas"]="Agenda Evaluaciones Académicas"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Programa Urna Electrónica"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Dashboard Pareto/ABC Streamlit"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="Dashboard TkInter Pareto/ABC"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="README del Perfil"
              ["Dashboard_Taipy"]="Dashboard Taipy"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Programa Matriz NM"
              ["Programa_Todos_Tipos_Matrizes"]="Programa Todos Tipos de Matrices"
              ["Programa_Quociente_Resto"]="Programa Cociente y Resto"
              ["Programa_Multiplo"]="Programa Múltiplo"
              ["Programa_Media_Aritmetica"]="Programa Media Aritmética"
              ["Programa_Determinar_Maior_Inteiro"]="Programa Determinar el Mayor Entero"
            )
            declare -A repo_names_fr=(
              ["Agenda_Avaliacoes_Academicas"]="Agenda des Évaluations Académiques"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Programme Urne Électronique"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Dashboard Pareto/ABC Streamlit"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="Dashboard TkInter Pareto/ABC"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="README du Profil"
              ["Dashboard_Taipy"]="Dashboard Taipy"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Programme Matrice NM"
              ["Programa_Todos_Tipos_Matrizes"]="Programme Toutes Types de Matrices"
              ["Programa_Quociente_Resto"]="Programme Quotient et Reste"
              ["Programa_Multiplo"]="Programme Multiple"
              ["Programa_Media_Aritmetica"]="Programme Moyenne Arithmétique"
              ["Programa_Determinar_Maior_Inteiro"]="Programme Déterminer le Plus Grand Entier"
            )
            declare -A repo_names_it=(
              ["Agenda_Avaliacoes_Academicas"]="Agenda Valutazioni Accademiche"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Programma Urna Elettronica"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Dashboard Pareto/ABC Streamlit"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="Dashboard TkInter Pareto/ABC"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="README del Profilo"
              ["Dashboard_Taipy"]="Dashboard Taipy"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Programma Matrice NM"
              ["Programa_Todos_Tipos_Matrizes"]="Programma Tutti Tipi di Matrici"
              ["Programa_Quociente_Resto"]="Programma Quoziente e Resto"
              ["Programa_Multiplo"]="Programma Multiplo"
              ["Programa_Media_Aritmetica"]="Programma Media Aritmetica"
              ["Programa_Determinar_Maior_Inteiro"]="Programma Determina Maggiore Intero"
            )
            declare -A repo_names_de=(
              ["Agenda_Avaliacoes_Academicas"]="Akademische Bewertungsagenda"
              ["Manager_Compression_PySide6_v.0.0.1"]="Manager Compression PySide6"
              ["Manager_Compression_PyQt6_v.0.0.1"]="Manager Compression PyQt6"
              ["eisenhower_organizing"]="Eisenhower Organizing"
              ["Programa_Urna_Eletronica"]="Elektronisches Wahlprogramm"
              ["Dashboard_Streamlit-Plotly-Pandas_Management"]="Dashboard Streamlit Management"
              ["Dashboard_Streamlit-Plotly-Pandas_Pareto-Diagram_ABC-Curve"]="Dashboard Pareto/ABC Streamlit"
              ["Dashboard_TkInter_Pareto-Diagram_ABC-Curve"]="Dashboard TkInter Pareto/ABC"
              ["sloth-highlander-theme-1"]="sloth-highlander-theme-1"
              ["fernandoncidade"]="Profil-README"
              ["Dashboard_Taipy"]="Dashboard Taipy"
              ["File_Manager"]="File Manager"
              ["Programa_Matriz_NM"]="Matrix NM Programm"
              ["Programa_Todos_Tipos_Matrizes"]="Alle Matrizenarten Programm"
              ["Programa_Quociente_Resto"]="Quotienten und Rest Programm"
              ["Programa_Multiplo"]="Multiplikationsprogramm"
              ["Programa_Media_Aritmetica"]="Arithmetisches Mittel Programm"
              ["Programa_Determinar_Maior_Inteiro"]="Bestimme das größte Ganze Programm"
            )

            # Insere linha traduzida para cada idioma
            echo "| ${repo_names_pt[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_pt.md
            echo "| ${repo_names_en[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_en.md
            echo "| ${repo_names_es[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_es.md
            echo "| ${repo_names_fr[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_fr.md
            echo "| ${repo_names_it[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_it.md
            echo "| ${repo_names_de[$repo]:-$repo} | $linguagem | ${horas}h | $lines | $commits | $produtividade l/h |" >> ../stats_de.md

            repo_env=$(echo "$repo" | sed -e 's/-/_/g' -e 's/\./_/g' | tr '[:lower:]' '[:upper:]')
            echo "${repo_env}_LINES=$lines" >> $GITHUB_ENV
            echo "${repo_env}_COMMITS=$commits" >> $GITHUB_ENV
            echo "${repo_env}_HOURS=$horas" >> $GITHUB_ENV
            echo "${repo_env}_PROD=$produtividade" >> $GITHUB_ENV

            total_lines=$((total_lines + lines))
            total_commits=$((total_commits + commits))
            total_horas=$(awk "BEGIN {printf \"%.1f\", $total_horas + $horas}")

            cd ../..
            echo "Repositório $repo processado: $lines linhas, $commits commits, $horas horas estimadas"
          done

          echo "TOTAL_LINES=$total_lines" >> $GITHUB_ENV
          echo "TOTAL_COMMITS=$total_commits" >> $GITHUB_ENV
          echo "TOTAL_HOURS=$total_horas" >> $GITHUB_ENV

          echo "${table_total_pt[main]}" >> stats_pt.md
          echo "${table_total_en[main]}" >> stats_en.md
          echo "${table_total_es[main]}" >> stats_es.md
          echo "${table_total_fr[main]}" >> stats_fr.md
          echo "${table_total_it[main]}" >> stats_it.md
          echo "${table_total_de[main]}" >> stats_de.md

          # Move para pasta principal
          mv stats_pt.md main-repo/stats_pt.md
          mv stats_en.md main-repo/stats_en.md
          mv stats_es.md main-repo/stats_es.md
          mv stats_fr.md main-repo/stats_fr.md
          mv stats_it.md main-repo/stats_it.md
          mv stats_de.md main-repo/stats_de.md

      - name: Atualizar README Multilíngue
        run: |
          cd main-repo

          # Função para substituir placeholders multilíngue
          update_placeholder() {
            lang=$1
            stats_file="stats_${lang}.md"
            # Transforma quebras de linha em \n para sed
            tabela=$(awk '{printf "%s\\n", $0}' "${stats_file}")
            sed -i "/<!--TABLE_STATS_${lang^^}_START-->/,/<!--TABLE_STATS_${lang^^}_END-->/c\\<!--TABLE_STATS_${lang^^}_START-->\n${tabela}<!--TABLE_STATS_${lang^^}_END-->" README.md
          }

          # Substituição multilíngue da tabela de estatísticas
          update_placeholder pt
          update_placeholder en
          update_placeholder es
          update_placeholder fr
          update_placeholder it
          update_placeholder de

          # Substitui totais globais multilíngues
          sed -i "s/<!-- TOTAL_LINES_PLACEHOLDER -->/${{ env.TOTAL_LINES }} linhas/g" README.md
          sed -i "s/<!-- TOTAL_COMMITS_PLACEHOLDER -->/${{ env.TOTAL_COMMITS }} commits/g" README.md
          sed -i "s/<!-- TOTAL_HOURS_PLACEHOLDER -->/${{ env.TOTAL_HOURS }} horas/g" README.md

          # Substituições individuais (igual ao workflow original)
          # ... [Coloque aqui os mesmos sed para cada repositório, como no arquivo original]

      - name: Commit e push das alterações
        run: |
          cd main-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md stats_pt.md stats_en.md stats_es.md stats_fr.md stats_it.md stats_de.md
          git commit -m "Atualiza estatísticas multilíngue do README [skip ci]" || echo "No changes to commit"
          git push
